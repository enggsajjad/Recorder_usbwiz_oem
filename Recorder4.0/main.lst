C51 COMPILER V6.11.4C,  MAIN                      02/06/112  11:11:19  PAGE  1

QCW(0x00002D1A)

WIN32 C51 COMPILER V6.11.4C, COMPILATION OF MODULE MAIN      
OBJECT MODULE PLACED IN e:\p\recorder\2011\recorder4.0\main.obj
COMPILER INVOKED BY: C51.EXE E:\P\RECORDER\2011\RECORDER4.0\MAIN.C OBJECT(E:\P\R
            -ECORDER\2011\RECORDER4.0\MAIN.OBJ) PIN(C:\FSI\INC) NOAM PR(E:\P\REC
            -ORDER\2011\RECORDER4.0\MAIN.LST) CD SB OE(1) SM FP(NOFLOAT) PW(80) 
            -

stmt level    source
   1          /*				Recorder1.2 for SDAC 3 Channel
   2          				Header 0xBF 0x13 	0x97 	0x74
   3          				Footer 0x40	0x40	0x40	0x40
   4          				Packet size = 468 bytes
   5          				Buadrate = 57600 bps
   6          				SD Interface = RS232
   7          				SDAC Interface = RS232
   8          				filesize = 1 day = 6.06 KB
   9          				Storage = 512 MB SD Card
  10          				Status Led's
  11          				Programmer: Sajjad Hussain S.E.
  12                      Dated: 	04-10-2011
  13          */
  14          #include "at89c51rc2.h"
  15          #include "usbwiz_oem.h"
  16          #include <intrins.h>
  17          // Main Program Starts Here
  18          void main()
  19          {
  20   1       	led1 = 1;//0;
  21   1       	led2 = 1;//0;
  22   1       	led3 = 0;
  23   1       	//led4 = 1;//0;
  24   1         rxState = RX_Check_GHI;
  25   1         state = IDLE;
  26   1         CTS  = 0;
  27   1         SEL0 = 1;SEL1 = 0;
  28   1         SEL2 = 0;   
  29   1      	SCON = 0x50;//0x50;
  30   1      	TMOD = 0x21;
  31   1      	TL1 = -12; 	//9600 BaudRate @ 6 Clock Cycle
  32   1      	TH1 = -12;
  33   1      	TR1 = 1;
  34   1      	ES = 1;
  35   1      	AUXR 	= AUXR | 0xFD;
  36   1      	CKCON0 = CKCON0 | 0x01;
  37   1      	EA = 1;
  38   1      	//InitDisp();
  39   1      	//LCDClear();
  40   1      	isInit = 1;
  41   1      	//Running Forever
  42   1      	while(1)
  43   1      	{
  44   2      		if(rxFlag)
  45   2      		{
  46   3      			rxFlag = 0;
  47   3      			switch(rxState)
  48   3      			{
  49   4      				case RX_Check_GHI:
  50   4      					if(rxChr=='!')
  51   4      					{
  52   5      						rxState = RX_INIT_DONE;
  53   5      					}
  54   4      					break;
  55   4      				case RX_INIT_DONE:
  56   4      					if(rxChr==13)
  57   4      					{
  58   5      					 	state = FILE_MOUNT;
  59   5      					}
  60   4      					break;
  61   4      				case RX_CHECK_FM:
  62   4      				/*	if(rxChr == 13)
  63   4      					{
  64   4      						rxState = RX_CHECK_FM2;
  65   4      					}
  66   4      					break;
  67   4      				case RX_CHECK_FM2:
  68   4      					if(rxChr == 13)
  69   4      					{
  70   4      						rxState = RX_CHECK_FM3;
  71   4      					}
  72   4      					break;	
  73   4      				case RX_CHECK_FM3:
  74   4      				*/	if(rxChr == 13)
  75   4      					{
  76   5      					 	//Putc('F');
  77   5      					 	state = CHANGE_BAUD;
  78   5      					}
  79   4      					break;
  80   4      				case RX_CHECK_BR:
  81   4      					if(rxChr == 13)
  82   4      					{
  83   5      						//Putc('=');
  84   5      						state = CALC_SPACE;
  85   5      					}
  86   4      					break;
  87   4      				case RX_CHECK_MS:
  88   4      					if(rxChr == '$')
  89   4      					{
  90   5      					 	rxCnt = 1;
  91   5      					 	rxState = RX_SAVE_VAL;
  92   5      					}
  93   4      					break;
  94   4      				case RX_SAVE_VAL:
  95   4      					if(rxChr == 13)
  96   4      						rxState = RX_MS_DONE;
  97   4      					else
  98   4      						rxBuf[rxCnt++] = rxChr;
  99   4      					break;
 100   4      				case RX_MS_DONE:
 101   4      					if(rxChr = 13)
 102   4      						state = CHK_FREE_SPACE;
 103   4      					break;
 104   4      				//////////////////////////////////////////////////////////////
            -/////////////
 105   4      				case RX_BYTE_0:
 106   4      					if (rxChr == 0xBF)
 107   4      					{
 108   5      						rxBuf[rxCnt++] = rxChr; rxState = RX_BYTE_1; 
 109   5      					}
 110   4      					else
 111   4      					{
 112   5      						rxCnt = 0; rxState = RX_BYTE_0;
 113   5      					}
 114   4      					break;
 115   4      				case RX_BYTE_1:
 116   4      					if (rxChr == 0x13)
 117   4      					{
 118   5      						rxBuf[rxCnt++] = rxChr; rxState = RX_BYTE_2; 
 119   5      					}
 120   4      					else
 121   4      					{
 122   5      						rxCnt = 0; rxState = RX_BYTE_0;
 123   5      					}
 124   4      					break;
 125   4      				case RX_BYTE_2:
 126   4      					if (rxChr == 0x97)
 127   4      					{
 128   5      						rxBuf[rxCnt++] = rxChr; rxState = RX_BYTE_3; 
 129   5      					}
 130   4      					else
 131   4      					{
 132   5      						rxCnt = 0; rxState = RX_BYTE_0;
 133   5      					}
 134   4      					break;
 135   4      				case RX_BYTE_3:
 136   4      					if (rxChr == 0x74)
 137   4      					{
 138   5      						rxBuf[rxCnt++] = rxChr; rxState = RX_DATA; 
 139   5      					}
 140   4      					else
 141   4      					{
 142   5      						rxCnt = 0; rxState = RX_BYTE_0;
 143   5      					}
 144   4      					break;
 145   4      				case RX_DATA:
 146   4      					rxBuf[rxCnt++] = rxChr; 
 147   4      					if (rxCnt == 474)
 148   4      						rxState = RX_BYTE_474;
 149   4      					break;
 150   4      				case RX_BYTE_474:
 151   4      					if (rxChr == 0x40)
 152   4      					{
 153   5      						rxBuf[rxCnt++] = rxChr; rxState = RX_BYTE_475; 
 154   5      					}
 155   4      					else
 156   4      					{
 157   5      						rxCnt = 0; rxState = RX_BYTE_0;
 158   5      					}
 159   4      					break;
 160   4      				case RX_BYTE_475:
 161   4      					if (rxChr == 0x40)
 162   4      					{
 163   5      						rxBuf[rxCnt++] = rxChr; rxState = RX_BYTE_476;
 164   5      					}
 165   4      					else
 166   4      					{
 167   5      						rxCnt = 0; rxState = RX_BYTE_0;
 168   5      					}
 169   4      					break;
 170   4      				case RX_BYTE_476:
 171   4      					if (rxChr == 0x40)
 172   4      					{
 173   5      						rxBuf[rxCnt++] = rxChr; rxState = RX_IDLE;
 174   5      						state = ns_after_pack;
 175   5      						//Putc('A');
 176   5      					}
 177   4      					else
 178   4      					{
 179   5      						rxCnt = 0; rxState = RX_BYTE_0;
 180   5      					}
 181   4      					break;
 182   4      				//////////////////////////////////////////////////////////////
            -////////////
 183   4      				case RX_WRITE_RES:
 184   4      					if(rxChr == 13)
 185   4      					{
 186   5      						state = WRT_PACKET;
 187   5      					}
 188   4      					break;
 189   4      				case RX_WRITE_DONE:
 190   4      					if(rxChr == 13)
 191   4      					{
 192   5      						state = FLUSH_FILE;
 193   5      					}
 194   4      					break;
 195   4      				default:
 196   4      					break;
 197   4      			}//sw
 198   3      		}//rxFlag
 199   2      		switch(state)
 200   2      		{
 201   3      		 	case IDLE:
 202   3      		 		break;
 203   3      		 	case FILE_MOUNT:
 204   3      		 		SD_WriteCmd("FM S\r");
 205   3      		 		rxState = RX_CHECK_FM;
 206   3      		 		state = IDLE;
 207   3      		 		break;
 208   3      		 	case CHANGE_BAUD:
 209   3      		 		SD_WriteCmd("BR 0040\r");
 210   3      				TL1 = -2;
 211   3      				TH1 = -2;
 212   3      			 	rxState = RX_CHECK_BR;
 213   3      			 	state = IDLE;
 214   3      				break;
 215   3      			case CALC_SPACE:
 216   3      				SD_WriteCmd("MS\r");
 217   3      				rxState = RX_CHECK_MS;
 218   3      				state = IDLE;
 219   3      				break;
 220   3      			case CHK_FREE_SPACE:
 221   3      				rxCnt = 0;
 222   3      				tot_size = 0;
 223   3       				free_size = 0;
 224   3      	 			for(h=1;h<9;h++)
 225   3      	 			{  
 226   4      	 				nibble = rxBuf[h] - 48;
 227   4       					if(nibble>9)
 228   4       						nibble = nibble - 7;
 229   4       					tot_size = tot_size<<4;
 230   4       					tot_size = tot_size + nibble;// No of Totoal Sectors
 231   4      	 			}
 232   3      	 			for(h=11;h<19;h++)
 233   3      	 			{  
 234   4       					nibble = rxBuf[h] - 48;
 235   4       					if(nibble>9)
 236   4       						nibble = nibble - 7;
 237   4      	 				free_size = free_size<<4;
 238   4      	 				free_size = free_size + nibble;// No of Free Sectors
 239   4      	 			}
 240   3       				tot_size = tot_size*512;// No of Total Bytes
 241   3       				tot_size = tot_size/474;// No of Packets that can be written 
            -in Total Space
 242   3       				free_size = free_size*512;// No of Free Bytes
 243   3      	 			free_size = free_size/474;// No of Packets that can be writte
            -n in Free Space
 244   3      	 			Percent = (free_size*100)/tot_size; // Percentage of Unused S
            -pace
 245   3      				
 246   3       				if(free_size != 0)
 247   3       				{
 248   4       					//Putc((Percent/10)+48);
 249   4      	 				//Putc((Percent%10)+48);
 250   4      		 			//Putc('%');
 251   4      		 			rxCnt = 0;
 252   4      		 			led3 = 1;
 253   4      		 			SEL0 = 0; SEL1 = 1;
 254   4      		 			rxState = RX_BYTE_0;
 255   4      			   	ns_after_pack = Drop_1st_Packet;
 256   4      			   }
 257   3      		   	else
 258   3       			   {
 259   4       			   	//Putc('F');
 260   4      			   	//Putc('L');
 261   4      			   	rxState = RX_IDLE;
 262   4      			   }
 263   3      			   state = IDLE;
 264   3      				break;
 265   3      	 		case Drop_1st_Packet:
 266   3      	 			ns_after_pack = Drop_2nd_Packet;
 267   3      	 			rxCnt = 0; rxState = RX_BYTE_0;
 268   3      	 			state = IDLE;
 269   3      	 			break;
 270   3      	 		case Drop_2nd_Packet:
 271   3      	 			ns_after_pack = Drop_3rd_Packet;
 272   3      	 			rxCnt = 0; rxState = RX_BYTE_0;
 273   3      	 			state = IDLE;
 274   3      	 			break;
 275   3      	 		case Drop_3rd_Packet:
 276   3      	 			ns_after_pack = Drop_4th_Packet;
 277   3      	 			rxCnt = 0; rxState = RX_BYTE_0;
 278   3      	 			state = IDLE;
 279   3      	 			break;
 280   3      	 		case Drop_4th_Packet:
 281   3      	 			ns_after_pack = Drop_5th_Packet;
 282   3      	 			rxCnt = 0; rxState = RX_BYTE_0;
 283   3      	 			state = IDLE;
 284   3      	 			break;
 285   3      	 		case Drop_5th_Packet:
 286   3      	 			ns_after_pack = First_Packet;
 287   3      	 			rxCnt = 0; rxState = RX_BYTE_0;
 288   3      	 			state = IDLE;
 289   3      	 			break;
 290   3      	 		case First_Packet:
 291   3      	   	 	FileName[0] = rxBuf[473];//Second
 292   3      	   	 	FileName[1] = rxBuf[472];//Minute
 293   3      	   	 	FileName[2] = rxBuf[471];//Hour
 294   3        		 		FileName[3] = rxBuf[470];//Day
 295   3        			 	FileName[4] = rxBuf[469];//Month
 296   3        		 		FileName[5] = rxBuf[468];//Year
 297   3      				PreHour = rxBuf[471];
 298   3      				PreDay = rxBuf[470];
 299   3      				SEL0 = 1; SEL1 = 0;
 300   3      				ns_after_pack = CHK_SPACE_AGAIN;
 301   3      				state = MAKE_FOLDER;
 302   3      				break;
 303   3      			case MAKE_FOLDER:
 304   3      				// Make New Folder
 305   3      				SendChar('M');
 306   3      		 		SendChar('D');
 307   3      		 		SendChar(' ');
 308   3      		 		SendChar('2');
 309   3      		 		SendChar('0');
 310   3      		 		SendChar((FileName[5]/10)+48);
 311   3      	 			SendChar((FileName[5]%10)+48);
 312   3      	 			SendChar((FileName[4]/10)+48);
 313   3      		 		SendChar((FileName[4]%10)+48);
 314   3      		 		SendChar((FileName[3]/10)+48);
 315   3      		 		SendChar((FileName[3]%10)+48);
 316   3      		 		SendChar('\r');
 317   3      		 		state = CHANGE_DIR;
 318   3      		 		//Putc('B');
 319   3      		 		break;
 320   3      		 	case CHANGE_DIR:
 321   3      		 		// Change Directory to New Folder
 322   3      		 		SendChar('C');
 323   3      	 			SendChar('D');
 324   3      	 			SendChar(' ');
 325   3      	 			SendChar('2');
 326   3      	 			SendChar('0');
 327   3      	 			SendChar((FileName[5]/10)+48);
 328   3       				SendChar((FileName[5]%10)+48);
 329   3       				SendChar((FileName[4]/10)+48);
 330   3      	 			SendChar((FileName[4]%10)+48);
 331   3      	 			SendChar((FileName[3]/10)+48);
 332   3      	 			SendChar((FileName[3]%10)+48);
 333   3      	 			SendChar('\r');
 334   3      	 			state = OPEN_FILE;
 335   3      	 			//Putc('C');
 336   3      	 			break;
 337   3      	 		case OPEN_FILE:
 338   3      	 			// Creat New File
 339   3      		 		SendChar('O');
 340   3      	 			SendChar('F');
 341   3      	 			SendChar(' ');
 342   3      	 			SendChar('0');
 343   3      	 			SendChar('A');
 344   3      	 			SendChar('>');
 345   3      	 			SendChar((FileName[2]/10)+48);
 346   3      	 			SendChar((FileName[2]%10)+48);
 347   3      				SendChar((FileName[1]/10)+48);
 348   3      				SendChar((FileName[1]%10)+48);
 349   3      				SendChar((FileName[0]/10)+48);
 350   3      				SendChar((FileName[0]%10)+48);
 351   3      	 			SendChar('.');
 352   3      	 			SendChar('e');
 353   3      	 			SendChar('v');
 354   3      	 			SendChar('t');
 355   3      	 			SendChar('\r');
 356   3      	 			state = WRITE_FILE;
 357   3      	 			//Putc('D');
 358   3      	 			break;
 359   3      	 		case  WRITE_FILE:
 360   3      	 			// Send Write Command
 361   3      		 		SD_WriteCmd("WF 0>01D4\r");
 362   3      	 			rxState = RX_WRITE_RES;
 363   3      	 			state = IDLE;
 364   3      	 			//Putc('E');
 365   3      	 			break;
 366   3      	 		case WRT_PACKET:
 367   3      	 			for(h=0;h<468;h++)
 368   3      		 			SendChar(rxBuf[h]);
 369   3      		 		rxState = RX_WRITE_DONE;
 370   3      		 		state = IDLE;
 371   3      		 		//Putc('F');
 372   3      		 		break;
 373   3      		 	case FLUSH_FILE:
 374   3      		 		free_size--;
 375   3      		 		SD_WriteCmd("FF 0\r");
 376   3      		 		SEL0 = 0; SEL1 = 1;
 377   3      		 		rxCnt = 0; rxState = RX_BYTE_0;
 378   3      		 		state = IDLE;
 379   3      		 		//Putc('G');
 380   3      		 		break;
 381   3      			///////////////////////////////////////////////////////////////
            -
 382   3      			case CHK_SPACE_AGAIN:
 383   3      				if(free_size != 0)
 384   3      				{
 385   4      					Percent = (free_size*100)/tot_size;
 386   4      	 				Percent = Percent/25;	// 0 1 2 3
 387   4      	 				state = Percent + 50;	//50 51 52 53
 388   4      	 				//Putc('L');
 389   4      		 		}
 390   3      		 		else
 391   3      		 		{
 392   4      		 		 	led1 = 1;//0;
 393   4      		 		 	led2 = 1;//0;
 394   4      		 		 	led3 = 1;//0;
 395   4      		 		 	//led4 = 1;//0;
 396   4      		 		 	//Putc('F');
 397   4      		 		 	//Putc('L');
 398   4      		 		 	state = IDLE;
 399   4      		 		}
 400   3      				break;
 401   3      			case below_100:
 402   3      				led1 = ~led1;
 403   3      				state = WRITE_AGAIN;
 404   3      				break;
 405   3      			case below_75:
 406   3      				led1 = 1;//0;
 407   3      				led2 = ~led2;
 408   3      				state = WRITE_AGAIN;
 409   3      				break;
 410   3      			case below_50:
 411   3      				led1 = 1;//0;
 412   3      				led2 = 1;//0;
 413   3      				led3 = ~led3;
 414   3      				state = WRITE_AGAIN;
 415   3      				break;
 416   3      			case below_25:
 417   3      				led1 = ~led1;
 418   3      				led2 = ~led2;
 419   3      				led3 = ~led3;
 420   3      				//led1 = 1;//0;
 421   3      				//led2 = 1;//0;
 422   3      				//led3 = 1;//0;
 423   3      				//led4 = ~led4;
 424   3      				state = WRITE_AGAIN;
 425   3      				break;
 426   3      		 	case WRITE_AGAIN:
 427   3      		 		SEL0 = 1; SEL1 = 0;
 428   3      	 			if(PreDay!=rxBuf[470])		//Day Changed
 429   3      	 			{
 430   4      	 				FileName[0] = rxBuf[473];//Second
 431   4      	   	 		FileName[1] = rxBuf[472];//Minute
 432   4      		   	 	FileName[2] = rxBuf[471];//Hour
 433   4      	  		 		FileName[3] = rxBuf[470];//Day
 434   4        				 	FileName[4] = rxBuf[469];//Month
 435   4        			 		FileName[5] = rxBuf[468];//Year
 436   4      	 				// Close Last File
 437   4      		 			SD_WriteCmd("CF 0\r");
 438   4      		 			// Change Path to Root Directory
 439   4      		 			SD_WriteCmd("CD \\\r");
 440   4      		 			state = MAKE_FOLDER;
 441   4      		 			//Putc('H');
 442   4      		 		}
 443   3      		 		else if((PreDay==rxBuf[470]) && (PreHour!=rxBuf[471]))		//Day
            - Same; Hour Changed
 444   3      	 			{
 445   4      	 				FileName[0] = rxBuf[473];//Second
 446   4      	   	 		FileName[1] = rxBuf[472];//Minute
 447   4      		   	 	FileName[2] = rxBuf[471];//Hour
 448   4      	  		 		FileName[3] = rxBuf[470];//Day
 449   4        				 	FileName[4] = rxBuf[469];//Month
 450   4        			 		FileName[5] = rxBuf[468];//Year
 451   4      	 				// Close Last File
 452   4      		 			SD_WriteCmd("CF 0\r");
 453   4      		 			state = OPEN_FILE;
 454   4      		 			//Putc('I');
 455   4      			 	}
 456   3      			 	else
 457   3      			 	{
 458   4      			 		// Write Command
 459   4      		 			SD_WriteCmd("WF 0>01D4\r");
 460   4      		 			rxState = RX_WRITE_RES;
 461   4      		 			state = IDLE;
 462   4      		 			//Putc('J');
 463   4      		 		}
 464   3      			 	PreHour = rxBuf[471];
 465   3      			 	PreDay = rxBuf[470];
 466   3      		 		break;
 467   3      		}//sw
 468   2      	}//wh
 469   1      }//main
 470          void Serial() interrupt 4
 471          {
 472   1      	if (RI)
 473   1      	{
 474   2      		RI = 0;
 475   2      		rxChr = SBUF;
 476   2      		rxFlag = 1;
 477   2         }// End if RI
 478   1      }
 479          
 480          
 481          
 482          
 483          
 484          
 485          
 486          
 487          
 488          
 489          
 490          
 491          
 492          
 493          
 494          
 495          
 496          
 497          
 498          
 499          
 500          
 501          
 502          
 503          
 504          
 505          
 506          
 507          
 508          
 509          
 510          
 511          
 512          
 513          
 514          
 515          
 516          
 517          
 518          
 519          
 520          
 521          
 522          
 523          
 524          
 525          
 526          
 527          
 528          
 529          
 530          
 531          
 532          
 533          
 534          
 535          
C51 COMPILER V6.11.4C,  MAIN                      02/06/112  11:11:19  PAGE  2

ASSEMBLY LISTING OF GENERATED OBJECT CODE

            ; FUNCTION _SendChar (BEGIN)
              ; Register R7 is assigned to parameter c
0000         ?WHILE3:
                                           ; SOURCE LINE # 82 
0000 2091FD         JB     RTS,?WHILE3
                                           ; SOURCE LINE # 83 
0003 D299           SETB   TI
0005         ?WHILE4:
                                           ; SOURCE LINE # 84 
0005 3099FD         JNB    TI,?WHILE4
0008 C299           CLR    TI
000A 8F99           MOV    SBUF,R7
000C         ?WHILE5:
                                           ; SOURCE LINE # 85 
000C 3099FD         JNB    TI,?WHILE5
000F C299           CLR    TI
0011 22             RET    

            ; FUNCTION _SendChar (END)

            ; FUNCTION _SD_WriteCmd (BEGIN)
              ; Register R0R4R5 is assigned to parameter cmd
                                           ; SOURCE LINE # 95 
0000 EB             MOV    A,R3
0001 FD             MOV    R5,A
0002 EA             MOV    A,R2
0003 FC             MOV    R4,A
0004 E9             MOV    A,R1
0005 F8             MOV    R0,A
                                           ; SOURCE LINE # 89 
0006 D299           SETB   TI
0008         ?WHILE9:
                                           ; SOURCE LINE # 90 
0008 ED             MOV    A,R5
0009 FB             MOV    R3,A
000A EC             MOV    A,R4
000B FA             MOV    R2,A
000C E8             MOV    A,R0
000D F9             MOV    R1,A
000E 120000  R      LCALL  IPGN1?C
0011 6017           JZ     ?WHILE11
0013         ?WHILE10:
                                           ; SOURCE LINE # 92 
0013 3099FD         JNB    TI,?WHILE10
0016 C299           CLR    TI
0018 ED             MOV    A,R5
0019 FB             MOV    R3,A
001A EC             MOV    A,R4
001B FA             MOV    R2,A
001C E8             MOV    A,R0
001D F9             MOV    R1,A
001E 120000  R      LCALL  IPGN1?C
0021 F599           MOV    SBUF,A
                                           ; SOURCE LINE # 93 
0023 08             INC    R0
0024 E8             MOV    A,R0
0025 70E1           JNZ    ?WHILE9
0027 0C             INC    R4
0028 80DE           SJMP   ?WHILE9
002A         ?WHILE11:
                                           ; SOURCE LINE # 95 
002A 3099FD         JNB    TI,?WHILE11
002D C299           CLR    TI
002F 22             RET    

            ; FUNCTION _SD_WriteCmd (END)

            ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 20 
0000 D2A0           SETB   led1
                                           ; SOURCE LINE # 21 
0002 D2A1           SETB   led2
                                           ; SOURCE LINE # 22 
0004 C2A2           CLR    led3
                                           ; SOURCE LINE # 24 
0006 750001  R      MOV    rxState,#001H
                                           ; SOURCE LINE # 25 
0009 750019  R      MOV    state,#019H
                                           ; SOURCE LINE # 26 
000C C294           CLR    CTS
                                           ; SOURCE LINE # 27 
000E D292           SETB   SEL0
0010 C293           CLR    SEL1
                                           ; SOURCE LINE # 28 
0012 C290           CLR    SEL2
                                           ; SOURCE LINE # 29 
0014 759850         MOV    SCON,#050H
                                           ; SOURCE LINE # 30 
0017 758921         MOV    TMOD,#021H
                                           ; SOURCE LINE # 31 
001A 758BF4         MOV    TL1,#0F4H
                                           ; SOURCE LINE # 32 
001D 758DF4         MOV    TH1,#0F4H
                                           ; SOURCE LINE # 33 
0020 D28E           SETB   TR1
                                           ; SOURCE LINE # 34 
0022 D2AC           SETB   ES
                                           ; SOURCE LINE # 35 
0024 E58E           MOV    A,AUXR
0026 44FD           ORL    A,#0FDH
0028 F58E           MOV    AUXR,A
                                           ; SOURCE LINE # 36 
002A E58F           MOV    A,CKCON0
002C 4401           ORL    A,#001H
002E F58F           MOV    CKCON0,A
                                           ; SOURCE LINE # 37 
0030 D2AF           SETB   EA
                                           ; SOURCE LINE # 40 
0032 D200    R      SETB   isInit
0034         ?WHILE13:
                                           ; SOURCE LINE # 44 
0034 200003  R      JB     rxFlag,$ + 6
0037 020000  R      LJMP   ?NXT47
                                           ; SOURCE LINE # 46 
003A C200    R      CLR    rxFlag
                                           ; SOURCE LINE # 47 
003C E500    R      MOV    A,rxState
003E 24FF           ADD    A,#0FFH
0040 B41100         CJNE   A,#011H,?LAB42
0043         ?LAB42:
0043 4003           JC     $ + 5
0045 020000  R      LJMP   ?DEFAULT1
0048 FA             MOV    R2,A
0049 23             RL     A
004A 2A             ADD    A,R2
004B 900000  R      MOV    DPTR,#?LAB43
004E 73             JMP    @A+DPTR
004F         ?LAB43:
004F 020000  R      LJMP   ?CASE40
0052 020000  R      LJMP   ?CASE41
0055 020000  R      LJMP   ?CASE42
0058 020000  R      LJMP   ?CASE43
005B 020000  R      LJMP   ?CASE44
005E 020000  R      LJMP   ?CASE45
0061 020000  R      LJMP   ?CASE46
0064 020000  R      LJMP   ?CASE47
0067 020000  R      LJMP   ?CASE48
006A 020000  R      LJMP   ?CASE49
006D 020000  R      LJMP   ?CASE50
0070 020000  R      LJMP   ?CASE51
0073 020000  R      LJMP   ?CASE52
0076 020000  R      LJMP   ?CASE53
0079 020000  R      LJMP   ?CASE54
007C 020000  R      LJMP   ?CASE55
007F 020000  R      LJMP   ?CASE56
0082 020000  R      LJMP   ?NXT48
0085         ?CASE40:
                                           ; SOURCE LINE # 50 
0085 E500    R      MOV    A,rxChr
0087 B42102         CJNE   A,#021H,$ + 5
008A 8003           SJMP   $ + 5
008C 020000  R      LJMP   ?NXT48
                                           ; SOURCE LINE # 52 
008F 750002  R      MOV    rxState,#002H
                                           ; SOURCE LINE # 54 
0092 020000  R      LJMP   ?NXT47
0095         ?CASE41:
                                           ; SOURCE LINE # 56 
0095 E500    R      MOV    A,rxChr
0097 B40D02         CJNE   A,#00DH,$ + 5
009A 8003           SJMP   $ + 5
009C 020000  R      LJMP   ?NXT48
                                           ; SOURCE LINE # 58 
009F 75001A  R      MOV    state,#01AH
                                           ; SOURCE LINE # 60 
00A2 020000  R      LJMP   ?NXT47
00A5         ?CASE42:
                                           ; SOURCE LINE # 74 
00A5 E500    R      MOV    A,rxChr
00A7 B40D02         CJNE   A,#00DH,$ + 5
00AA 8003           SJMP   $ + 5
00AC 020000  R      LJMP   ?NXT48
                                           ; SOURCE LINE # 77 
00AF 75001B  R      MOV    state,#01BH
                                           ; SOURCE LINE # 79 
00B2 020000  R      LJMP   ?NXT47
00B5         ?CASE43:
                                           ; SOURCE LINE # 81 
00B5 E500    R      MOV    A,rxChr
00B7 B40D02         CJNE   A,#00DH,$ + 5
00BA 8003           SJMP   $ + 5
00BC 020000  R      LJMP   ?NXT48
                                           ; SOURCE LINE # 84 
00BF 75001C  R      MOV    state,#01CH
                                           ; SOURCE LINE # 86 
00C2 020000  R      LJMP   ?NXT47
00C5         ?CASE44:
                                           ; SOURCE LINE # 88 
00C5 E500    R      MOV    A,rxChr
00C7 B42402         CJNE   A,#024H,$ + 5
00CA 8003           SJMP   $ + 5
00CC 020000  R      LJMP   ?NXT48
                                           ; SOURCE LINE # 90 
00CF E4             CLR    A
00D0 F500    R      MOV    rxCnt,A
00D2 750001  R      MOV    rxCnt+01H,#001H
                                           ; SOURCE LINE # 91 
00D5 750006  R      MOV    rxState,#006H
                                           ; SOURCE LINE # 93 
00D8 020000  R      LJMP   ?NXT47
00DB         ?CASE45:
                                           ; SOURCE LINE # 95 
00DB E500    R      MOV    A,rxChr
00DD B40D06         CJNE   A,#00DH,?ELSE30
                                           ; SOURCE LINE # 96 
00E0 750007  R      MOV    rxState,#007H
00E3 020000  R      LJMP   ?NXT48
00E6         ?ELSE30:
                                           ; SOURCE LINE # 98 
00E6 AA00    R      MOV    R2,rxCnt
00E8 AB00    R      MOV    R3,rxCnt+01H
00EA 0500    R      INC    rxCnt+01H
00EC E500    R      MOV    A,rxCnt+01H
00EE 7002           JNZ    ?LAB44
00F0 0500    R      INC    rxCnt
00F2         ?LAB44:
00F2 EB             MOV    A,R3
00F3 2400    R      ADD    A,#LOW (rxBuf)
00F5 F582           MOV    DPL,A
00F7 EA             MOV    A,R2
00F8 3400    R      ADDC   A,#HIGH (rxBuf)
00FA F583           MOV    DPH,A
00FC E500    R      MOV    A,rxChr
00FE F0             MOVX   @DPTR,A
                                           ; SOURCE LINE # 99 
00FF 020000  R      LJMP   ?NXT47
0102         ?CASE46:
                                           ; SOURCE LINE # 101 
0102 75000D  R      MOV    rxChr,#00DH
0105 E500    R      MOV    A,rxChr
0107 7003           JNZ    $ + 5
0109 020000  R      LJMP   ?NXT48
                                           ; SOURCE LINE # 102 
010C 75001D  R      MOV    state,#01DH
                                           ; SOURCE LINE # 103 
010F 020000  R      LJMP   ?NXT47
0112         ?CASE49:
                                           ; SOURCE LINE # 106 
0112 E500    R      MOV    A,rxChr
0114 B4BF1F         CJNE   A,#0BFH,?ELSE32
                                           ; SOURCE LINE # 108 
0117 AA00    R      MOV    R2,rxCnt
0119 AB00    R      MOV    R3,rxCnt+01H
011B 0500    R      INC    rxCnt+01H
011D E500    R      MOV    A,rxCnt+01H
011F 7002           JNZ    ?LAB45
0121 0500    R      INC    rxCnt
0123         ?LAB45:
0123 EB             MOV    A,R3
0124 2400    R      ADD    A,#LOW (rxBuf)
0126 F582           MOV    DPL,A
0128 EA             MOV    A,R2
0129 3400    R      ADDC   A,#HIGH (rxBuf)
012B F583           MOV    DPH,A
012D E500    R      MOV    A,rxChr
012F F0             MOVX   @DPTR,A
0130 75000B  R      MOV    rxState,#00BH
0133 020000  R      LJMP   ?NXT48
0136         ?ELSE32:
                                           ; SOURCE LINE # 112 
0136 E4             CLR    A
0137 F500    R      MOV    rxCnt,A
0139 F500    R      MOV    rxCnt+01H,A
013B 75000A  R      MOV    rxState,#00AH
                                           ; SOURCE LINE # 114 
013E 020000  R      LJMP   ?NXT47
0141         ?CASE50:
                                           ; SOURCE LINE # 116 
0141 E500    R      MOV    A,rxChr
0143 B4131F         CJNE   A,#013H,?ELSE33
                                           ; SOURCE LINE # 118 
0146 AA00    R      MOV    R2,rxCnt
0148 AB00    R      MOV    R3,rxCnt+01H
014A 0500    R      INC    rxCnt+01H
014C E500    R      MOV    A,rxCnt+01H
014E 7002           JNZ    ?LAB46
0150 0500    R      INC    rxCnt
0152         ?LAB46:
0152 EB             MOV    A,R3
0153 2400    R      ADD    A,#LOW (rxBuf)
0155 F582           MOV    DPL,A
0157 EA             MOV    A,R2
0158 3400    R      ADDC   A,#HIGH (rxBuf)
015A F583           MOV    DPH,A
015C E500    R      MOV    A,rxChr
015E F0             MOVX   @DPTR,A
015F 75000C  R      MOV    rxState,#00CH
0162 020000  R      LJMP   ?NXT48
0165         ?ELSE33:
                                           ; SOURCE LINE # 122 
0165 E4             CLR    A
0166 F500    R      MOV    rxCnt,A
0168 F500    R      MOV    rxCnt+01H,A
016A 75000A  R      MOV    rxState,#00AH
                                           ; SOURCE LINE # 124 
016D 020000  R      LJMP   ?NXT47
0170         ?CASE51:
                                           ; SOURCE LINE # 126 
0170 E500    R      MOV    A,rxChr
0172 B4971F         CJNE   A,#097H,?ELSE34
                                           ; SOURCE LINE # 128 
0175 AA00    R      MOV    R2,rxCnt
0177 AB00    R      MOV    R3,rxCnt+01H
0179 0500    R      INC    rxCnt+01H
017B E500    R      MOV    A,rxCnt+01H
017D 7002           JNZ    ?LAB47
017F 0500    R      INC    rxCnt
0181         ?LAB47:
0181 EB             MOV    A,R3
0182 2400    R      ADD    A,#LOW (rxBuf)
0184 F582           MOV    DPL,A
0186 EA             MOV    A,R2
0187 3400    R      ADDC   A,#HIGH (rxBuf)
0189 F583           MOV    DPH,A
018B E500    R      MOV    A,rxChr
018D F0             MOVX   @DPTR,A
018E 75000D  R      MOV    rxState,#00DH
0191 020000  R      LJMP   ?NXT48
0194         ?ELSE34:
                                           ; SOURCE LINE # 132 
0194 E4             CLR    A
0195 F500    R      MOV    rxCnt,A
0197 F500    R      MOV    rxCnt+01H,A
0199 75000A  R      MOV    rxState,#00AH
                                           ; SOURCE LINE # 134 
019C 020000  R      LJMP   ?NXT47
019F         ?CASE52:
                                           ; SOURCE LINE # 136 
019F E500    R      MOV    A,rxChr
01A1 B4741F         CJNE   A,#074H,?ELSE35
                                           ; SOURCE LINE # 138 
01A4 AA00    R      MOV    R2,rxCnt
01A6 AB00    R      MOV    R3,rxCnt+01H
01A8 0500    R      INC    rxCnt+01H
01AA E500    R      MOV    A,rxCnt+01H
01AC 7002           JNZ    ?LAB48
01AE 0500    R      INC    rxCnt
01B0         ?LAB48:
01B0 EB             MOV    A,R3
01B1 2400    R      ADD    A,#LOW (rxBuf)
01B3 F582           MOV    DPL,A
01B5 EA             MOV    A,R2
01B6 3400    R      ADDC   A,#HIGH (rxBuf)
01B8 F583           MOV    DPH,A
01BA E500    R      MOV    A,rxChr
01BC F0             MOVX   @DPTR,A
01BD 750011  R      MOV    rxState,#011H
01C0 020000  R      LJMP   ?NXT48
01C3         ?ELSE35:
                                           ; SOURCE LINE # 142 
01C3 E4             CLR    A
01C4 F500    R      MOV    rxCnt,A
01C6 F500    R      MOV    rxCnt+01H,A
01C8 75000A  R      MOV    rxState,#00AH
                                           ; SOURCE LINE # 144 
01CB 020000  R      LJMP   ?NXT47
01CE         ?CASE56:
                                           ; SOURCE LINE # 146 
01CE AA00    R      MOV    R2,rxCnt
01D0 AB00    R      MOV    R3,rxCnt+01H
01D2 0500    R      INC    rxCnt+01H
01D4 E500    R      MOV    A,rxCnt+01H
01D6 7002           JNZ    ?LAB49
01D8 0500    R      INC    rxCnt
01DA         ?LAB49:
01DA EB             MOV    A,R3
01DB 2400    R      ADD    A,#LOW (rxBuf)
01DD F582           MOV    DPL,A
01DF EA             MOV    A,R2
01E0 3400    R      ADDC   A,#HIGH (rxBuf)
01E2 F583           MOV    DPH,A
01E4 E500    R      MOV    A,rxChr
01E6 F0             MOVX   @DPTR,A
                                           ; SOURCE LINE # 147 
01E7 E500    R      MOV    A,rxCnt
01E9 B40102         CJNE   A,#001H,$ + 5
01EC 8003           SJMP   $ + 5
01EE 020000  R      LJMP   ?NXT48
01F1 E500    R      MOV    A,rxCnt+01H
01F3 B4DA02         CJNE   A,#0DAH,$ + 5
01F6 8003           SJMP   $ + 5
01F8 020000  R      LJMP   ?NXT48
                                           ; SOURCE LINE # 148 
01FB 75000E  R      MOV    rxState,#00EH
                                           ; SOURCE LINE # 149 
01FE 020000  R      LJMP   ?NXT47
0201         ?CASE53:
                                           ; SOURCE LINE # 151 
0201 E500    R      MOV    A,rxChr
0203 B4401E         CJNE   A,#040H,?ELSE37
                                           ; SOURCE LINE # 153 
0206 AA00    R      MOV    R2,rxCnt
0208 AB00    R      MOV    R3,rxCnt+01H
020A 0500    R      INC    rxCnt+01H
020C E500    R      MOV    A,rxCnt+01H
020E 7002           JNZ    ?LAB50
0210 0500    R      INC    rxCnt
0212         ?LAB50:
0212 EB             MOV    A,R3
0213 2400    R      ADD    A,#LOW (rxBuf)
0215 F582           MOV    DPL,A
0217 EA             MOV    A,R2
0218 3400    R      ADDC   A,#HIGH (rxBuf)
021A F583           MOV    DPH,A
021C E500    R      MOV    A,rxChr
021E F0             MOVX   @DPTR,A
021F 75000F  R      MOV    rxState,#00FH
0222 8079           SJMP   ?NXT48
0224         ?ELSE37:
                                           ; SOURCE LINE # 157 
0224 E4             CLR    A
0225 F500    R      MOV    rxCnt,A
0227 F500    R      MOV    rxCnt+01H,A
0229 75000A  R      MOV    rxState,#00AH
                                           ; SOURCE LINE # 159 
022C 806F           SJMP   ?NXT47
022E         ?CASE54:
                                           ; SOURCE LINE # 161 
022E E500    R      MOV    A,rxChr
0230 B4401E         CJNE   A,#040H,?ELSE38
                                           ; SOURCE LINE # 163 
0233 AA00    R      MOV    R2,rxCnt
0235 AB00    R      MOV    R3,rxCnt+01H
0237 0500    R      INC    rxCnt+01H
0239 E500    R      MOV    A,rxCnt+01H
023B 7002           JNZ    ?LAB51
023D 0500    R      INC    rxCnt
023F         ?LAB51:
023F EB             MOV    A,R3
0240 2400    R      ADD    A,#LOW (rxBuf)
0242 F582           MOV    DPL,A
0244 EA             MOV    A,R2
0245 3400    R      ADDC   A,#HIGH (rxBuf)
0247 F583           MOV    DPH,A
0249 E500    R      MOV    A,rxChr
024B F0             MOVX   @DPTR,A
024C 750010  R      MOV    rxState,#010H
024F 804C           SJMP   ?NXT48
0251         ?ELSE38:
                                           ; SOURCE LINE # 167 
0251 E4             CLR    A
0252 F500    R      MOV    rxCnt,A
0254 F500    R      MOV    rxCnt+01H,A
0256 75000A  R      MOV    rxState,#00AH
                                           ; SOURCE LINE # 169 
0259 8042           SJMP   ?NXT47
025B         ?CASE55:
                                           ; SOURCE LINE # 171 
025B E500    R      MOV    A,rxChr
025D B44021         CJNE   A,#040H,?ELSE39
                                           ; SOURCE LINE # 173 
0260 AA00    R      MOV    R2,rxCnt
0262 AB00    R      MOV    R3,rxCnt+01H
0264 0500    R      INC    rxCnt+01H
0266 E500    R      MOV    A,rxCnt+01H
0268 7002           JNZ    ?LAB52
026A 0500    R      INC    rxCnt
026C         ?LAB52:
026C EB             MOV    A,R3
026D 2400    R      ADD    A,#LOW (rxBuf)
026F F582           MOV    DPL,A
0271 EA             MOV    A,R2
0272 3400    R      ADDC   A,#HIGH (rxBuf)
0274 F583           MOV    DPH,A
0276 E500    R      MOV    A,rxChr
0278 F0             MOVX   @DPTR,A
0279 750012  R      MOV    rxState,#012H
                                           ; SOURCE LINE # 174 
027C 850000  R      MOV    state,ns_after_pack
027F 801C           SJMP   ?NXT48
0281         ?ELSE39:
                                           ; SOURCE LINE # 179 
0281 E4             CLR    A
0282 F500    R      MOV    rxCnt,A
0284 F500    R      MOV    rxCnt+01H,A
0286 75000A  R      MOV    rxState,#00AH
                                           ; SOURCE LINE # 181 
0289 8012           SJMP   ?NXT47
028B         ?CASE47:
                                           ; SOURCE LINE # 184 
028B E500    R      MOV    A,rxChr
028D B40D0D         CJNE   A,#00DH,?NXT48
                                           ; SOURCE LINE # 186 
0290 750028  R      MOV    state,#028H
                                           ; SOURCE LINE # 188 
0293 8008           SJMP   ?NXT47
0295         ?CASE48:
                                           ; SOURCE LINE # 190 
0295 E500    R      MOV    A,rxChr
0297 B40D03         CJNE   A,#00DH,?NXT48
                                           ; SOURCE LINE # 192 
029A 750029  R      MOV    state,#029H
029D         ?DEFAULT1:

029D         ?NXT48:

029D         ?NXT47:
                                           ; SOURCE LINE # 199 
029D E500    R      MOV    A,state
029F 24E7           ADD    A,#0E7H
02A1 B41D00         CJNE   A,#01DH,?LAB54
02A4         ?LAB54:
02A4 4003           JC     $ + 5
02A6 020000  R      LJMP   ?NXT67
02A9 FA             MOV    R2,A
02AA 23             RL     A
02AB 2A             ADD    A,R2
02AC 900000  R      MOV    DPTR,#?LAB55
02AF 73             JMP    @A+DPTR
02B0         ?LAB55:
02B0 020000  R      LJMP   ?NXT67
02B3 020000  R      LJMP   ?CASE58
02B6 020000  R      LJMP   ?CASE59
02B9 020000  R      LJMP   ?CASE60
02BC 020000  R      LJMP   ?CASE61
02BF 020000  R      LJMP   ?CASE62
02C2 020000  R      LJMP   ?CASE63
02C5 020000  R      LJMP   ?CASE64
02C8 020000  R      LJMP   ?CASE65
02CB 020000  R      LJMP   ?CASE66
02CE 020000  R      LJMP   ?CASE67
02D1 020000  R      LJMP   ?CASE68
02D4 020000  R      LJMP   ?CASE69
02D7 020000  R      LJMP   ?CASE70
02DA 020000  R      LJMP   ?CASE71
02DD 020000  R      LJMP   ?CASE72
02E0 020000  R      LJMP   ?CASE73
02E3 020000  R      LJMP   ?CASE74
02E6 020000  R      LJMP   ?NXT67
02E9 020000  R      LJMP   ?NXT67
02EC 020000  R      LJMP   ?NXT67
02EF 020000  R      LJMP   ?NXT67
02F2 020000  R      LJMP   ?CASE75
02F5 020000  R      LJMP   ?NXT67
02F8 020000  R      LJMP   ?NXT67
02FB 020000  R      LJMP   ?CASE76
02FE 020000  R      LJMP   ?CASE77
0301 020000  R      LJMP   ?CASE78
0304 020000  R      LJMP   ?CASE79
0307 020000  R      LJMP   ?WHILE13
030A         ?CASE58:
                                           ; SOURCE LINE # 204 
030A 7B05           MOV    R3,#005H
030C 7A00    R      MOV    R2,#000H
030E 7900    R      MOV    R1,#000H
0310 120000  R      LCALL  _SD_WriteCmd
                                           ; SOURCE LINE # 205 
0313 750003  R      MOV    rxState,#003H
                                           ; SOURCE LINE # 206 
0316 750019  R      MOV    state,#019H
                                           ; SOURCE LINE # 207 
0319 020000  R      LJMP   ?WHILE13
031C         ?CASE59:
                                           ; SOURCE LINE # 209 
031C 7B05           MOV    R3,#005H
031E 7A00    R      MOV    R2,#000H
0320 7900    R      MOV    R1,#000H
0322 120000  R      LCALL  _SD_WriteCmd
                                           ; SOURCE LINE # 210 
0325 758BFE         MOV    TL1,#0FEH
                                           ; SOURCE LINE # 211 
0328 758DFE         MOV    TH1,#0FEH
                                           ; SOURCE LINE # 212 
032B 750004  R      MOV    rxState,#004H
                                           ; SOURCE LINE # 213 
032E 750019  R      MOV    state,#019H
                                           ; SOURCE LINE # 214 
0331 020000  R      LJMP   ?WHILE13
0334         ?CASE60:
                                           ; SOURCE LINE # 216 
0334 7B05           MOV    R3,#005H
0336 7A00    R      MOV    R2,#000H
0338 7900    R      MOV    R1,#000H
033A 120000  R      LCALL  _SD_WriteCmd
                                           ; SOURCE LINE # 217 
033D 750005  R      MOV    rxState,#005H
                                           ; SOURCE LINE # 218 
0340 750019  R      MOV    state,#019H
                                           ; SOURCE LINE # 219 
0343 020000  R      LJMP   ?WHILE13
0346         ?CASE61:
                                           ; SOURCE LINE # 221 
0346 E4             CLR    A
0347 F500    R      MOV    rxCnt,A
0349 F500    R      MOV    rxCnt+01H,A
                                           ; SOURCE LINE # 222 
034B F500    R      MOV    tot_size,A
034D F500    R      MOV    tot_size+01H,A
034F F500    R      MOV    tot_size+02H,A
0351 F500    R      MOV    tot_size+03H,A
                                           ; SOURCE LINE # 223 
0353 F500    R      MOV    free_size,A
0355 F500    R      MOV    free_size+01H,A
0357 F500    R      MOV    free_size+02H,A
0359 F500    R      MOV    free_size+03H,A
                                           ; SOURCE LINE # 224 
035B F500    R      MOV    h,A
035D 750001  R      MOV    h+01H,#001H
0360         ?FOR3:
0360 E500    R      MOV    A,h
0362 B40005         CJNE   A,#000H,?LAB56
0365 E500    R      MOV    A,h+01H
0367 B40900         CJNE   A,#009H,?LAB56
036A         ?LAB56:
036A 5056           JNC    ?NXT68
                                           ; SOURCE LINE # 226 
036C E500    R      MOV    A,h+01H
036E 2400    R      ADD    A,#LOW (rxBuf)
0370 F582           MOV    DPL,A
0372 E500    R      MOV    A,h
0374 3400    R      ADDC   A,#HIGH (rxBuf)
0376 F583           MOV    DPH,A
0378 E0             MOVX   A,@DPTR
0379 24D0           ADD    A,#0D0H
037B F500    R      MOV    nibble,A
                                           ; SOURCE LINE # 227 
037D B40901         CJNE   A,#009H,?LAB58
0380 D3             SETB   C
0381         ?LAB58:
0381 4006           JC     ?NXT70
                                           ; SOURCE LINE # 228 
0383 E500    R      MOV    A,nibble
0385 24F9           ADD    A,#0F9H
0387 F500    R      MOV    nibble,A
0389         ?NXT70:
                                           ; SOURCE LINE # 229 
0389 AC00    R      MOV    R4,tot_size
038B AD00    R      MOV    R5,tot_size+01H
038D AE00    R      MOV    R6,tot_size+02H
038F AF00    R      MOV    R7,tot_size+03H
0391 75F004         MOV    B,#004H
0394 120000  R      LCALL  ?C_LSHL
0397 8C00    R      MOV    tot_size,R4
0399 8D00    R      MOV    tot_size+01H,R5
039B 8E00    R      MOV    tot_size+02H,R6
039D 8F00    R      MOV    tot_size+03H,R7
                                           ; SOURCE LINE # 230 
039F C000    R      PUSH   tot_size
03A1 C000    R      PUSH   tot_size+01H
03A3 C000    R      PUSH   tot_size+02H
03A5 C000    R      PUSH   tot_size+03H
03A7 E4             CLR    A
03A8 FE             MOV    R6,A
03A9 FC             MOV    R4,A
03AA FD             MOV    R5,A
03AB AF00    R      MOV    R7,nibble
03AD 120000  R      LCALL  ?C_LADD
03B0 8C00    R      MOV    tot_size,R4
03B2 8D00    R      MOV    tot_size+01H,R5
03B4 8E00    R      MOV    tot_size+02H,R6
03B6 8F00    R      MOV    tot_size+03H,R7
                                           ; SOURCE LINE # 224 
03B8 0500    R      INC    h+01H
03BA E500    R      MOV    A,h+01H
03BC 70A2           JNZ    ?FOR3
03BE 0500    R      INC    h
03C0 809E           SJMP   ?FOR3
03C2         ?NXT68:
                                           ; SOURCE LINE # 232 
03C2 E4             CLR    A
03C3 F500    R      MOV    h,A
03C5 75000B  R      MOV    h+01H,#00BH
03C8         ?FOR4:
03C8 E500    R      MOV    A,h
03CA B40005         CJNE   A,#000H,?LAB61
03CD E500    R      MOV    A,h+01H
03CF B41300         CJNE   A,#013H,?LAB61
03D2         ?LAB61:
03D2 5056           JNC    ?NXT71
                                           ; SOURCE LINE # 234 
03D4 E500    R      MOV    A,h+01H
03D6 2400    R      ADD    A,#LOW (rxBuf)
03D8 F582           MOV    DPL,A
03DA E500    R      MOV    A,h
03DC 3400    R      ADDC   A,#HIGH (rxBuf)
03DE F583           MOV    DPH,A
03E0 E0             MOVX   A,@DPTR
03E1 24D0           ADD    A,#0D0H
03E3 F500    R      MOV    nibble,A
                                           ; SOURCE LINE # 235 
03E5 B40901         CJNE   A,#009H,?LAB63
03E8 D3             SETB   C
03E9         ?LAB63:
03E9 4006           JC     ?NXT73
                                           ; SOURCE LINE # 236 
03EB E500    R      MOV    A,nibble
03ED 24F9           ADD    A,#0F9H
03EF F500    R      MOV    nibble,A
03F1         ?NXT73:
                                           ; SOURCE LINE # 237 
03F1 AC00    R      MOV    R4,free_size
03F3 AD00    R      MOV    R5,free_size+01H
03F5 AE00    R      MOV    R6,free_size+02H
03F7 AF00    R      MOV    R7,free_size+03H
03F9 75F004         MOV    B,#004H
03FC 120000  R      LCALL  ?C_LSHL
03FF 8C00    R      MOV    free_size,R4
0401 8D00    R      MOV    free_size+01H,R5
0403 8E00    R      MOV    free_size+02H,R6
0405 8F00    R      MOV    free_size+03H,R7
                                           ; SOURCE LINE # 238 
0407 C000    R      PUSH   free_size
0409 C000    R      PUSH   free_size+01H
040B C000    R      PUSH   free_size+02H
040D C000    R      PUSH   free_size+03H
040F E4             CLR    A
0410 FE             MOV    R6,A
0411 FC             MOV    R4,A
0412 FD             MOV    R5,A
0413 AF00    R      MOV    R7,nibble
0415 120000  R      LCALL  ?C_LADD
0418 8C00    R      MOV    free_size,R4
041A 8D00    R      MOV    free_size+01H,R5
041C 8E00    R      MOV    free_size+02H,R6
041E 8F00    R      MOV    free_size+03H,R7
                                           ; SOURCE LINE # 224 
0420 0500    R      INC    h+01H
0422 E500    R      MOV    A,h+01H
0424 70A2           JNZ    ?FOR4
0426 0500    R      INC    h
0428 809E           SJMP   ?FOR4
042A         ?NXT71:
                                           ; SOURCE LINE # 240 
042A C000    R      PUSH   tot_size
042C C000    R      PUSH   tot_size+01H
042E C000    R      PUSH   tot_size+02H
0430 C000    R      PUSH   tot_size+03H
0432 E4             CLR    A
0433 FC             MOV    R4,A
0434 FD             MOV    R5,A
0435 7402           MOV    A,#002H
0437 FE             MOV    R6,A
0438 E4             CLR    A
0439 FF             MOV    R7,A
043A 120000  R      LCALL  ?C_LMUL
043D 8C00    R      MOV    tot_size,R4
043F 8D00    R      MOV    tot_size+01H,R5
0441 8E00    R      MOV    tot_size+02H,R6
0443 8F00    R      MOV    tot_size+03H,R7
                                           ; SOURCE LINE # 241 
0445 C000    R      PUSH   tot_size
0447 C000    R      PUSH   tot_size+01H
0449 C000    R      PUSH   tot_size+02H
044B C000    R      PUSH   tot_size+03H
044D E4             CLR    A
044E FC             MOV    R4,A
044F FD             MOV    R5,A
0450 04             INC    A
0451 FE             MOV    R6,A
0452 74DA           MOV    A,#0DAH
0454 FF             MOV    R7,A
0455 120000  R      LCALL  ?C_ULDIV_SP
0458 8C00    R      MOV    tot_size,R4
045A 8D00    R      MOV    tot_size+01H,R5
045C 8E00    R      MOV    tot_size+02H,R6
045E 8F00    R      MOV    tot_size+03H,R7
                                           ; SOURCE LINE # 242 
0460 C000    R      PUSH   free_size
0462 C000    R      PUSH   free_size+01H
0464 C000    R      PUSH   free_size+02H
0466 C000    R      PUSH   free_size+03H
0468 E4             CLR    A
0469 FC             MOV    R4,A
046A FD             MOV    R5,A
046B 7402           MOV    A,#002H
046D FE             MOV    R6,A
046E E4             CLR    A
046F FF             MOV    R7,A
0470 120000  R      LCALL  ?C_LMUL
0473 8C00    R      MOV    free_size,R4
0475 8D00    R      MOV    free_size+01H,R5
0477 8E00    R      MOV    free_size+02H,R6
0479 8F00    R      MOV    free_size+03H,R7
                                           ; SOURCE LINE # 243 
047B C000    R      PUSH   free_size
047D C000    R      PUSH   free_size+01H
047F C000    R      PUSH   free_size+02H
0481 C000    R      PUSH   free_size+03H
0483 E4             CLR    A
0484 FC             MOV    R4,A
0485 FD             MOV    R5,A
0486 04             INC    A
0487 FE             MOV    R6,A
0488 74DA           MOV    A,#0DAH
048A FF             MOV    R7,A
048B 120000  R      LCALL  ?C_SLDIV_SP
048E 8C00    R      MOV    free_size,R4
0490 8D00    R      MOV    free_size+01H,R5
0492 8E00    R      MOV    free_size+02H,R6
0494 8F00    R      MOV    free_size+03H,R7
                                           ; SOURCE LINE # 244 
0496 C000    R      PUSH   free_size
0498 C000    R      PUSH   free_size+01H
049A C000    R      PUSH   free_size+02H
049C C000    R      PUSH   free_size+03H
049E E4             CLR    A
049F FE             MOV    R6,A
04A0 FC             MOV    R4,A
04A1 FD             MOV    R5,A
04A2 7464           MOV    A,#064H
04A4 FF             MOV    R7,A
04A5 120000  R      LCALL  ?C_LMUL
04A8 C004           PUSH   AR4
04AA C005           PUSH   AR5
04AC C006           PUSH   AR6
04AE C007           PUSH   AR7
04B0 AC00    R      MOV    R4,tot_size
04B2 AD00    R      MOV    R5,tot_size+01H
04B4 AE00    R      MOV    R6,tot_size+02H
04B6 AF00    R      MOV    R7,tot_size+03H
04B8 120000  R      LCALL  ?C_ULDIV_SP
04BB 8F00    R      MOV    Percent,R7
                                           ; SOURCE LINE # 246 
04BD E500    R      MOV    A,free_size
04BF 4500    R      ORL    A,free_size+01H
04C1 4500    R      ORL    A,free_size+02H
04C3 4500    R      ORL    A,free_size+03H
04C5 6013           JZ     ?ELSE44
                                           ; SOURCE LINE # 251 
04C7 E4             CLR    A
04C8 F500    R      MOV    rxCnt,A
04CA F500    R      MOV    rxCnt+01H,A
                                           ; SOURCE LINE # 252 
04CC D2A2           SETB   led3
                                           ; SOURCE LINE # 253 
04CE C292           CLR    SEL0
04D0 D293           SETB   SEL1
                                           ; SOURCE LINE # 254 
04D2 75000A  R      MOV    rxState,#00AH
                                           ; SOURCE LINE # 255 
04D5 75001E  R      MOV    ns_after_pack,#01EH
04D8 8003           SJMP   ?NXT74
04DA         ?ELSE44:
                                           ; SOURCE LINE # 261 
04DA 750012  R      MOV    rxState,#012H
04DD         ?NXT74:
                                           ; SOURCE LINE # 263 
04DD 750019  R      MOV    state,#019H
                                           ; SOURCE LINE # 264 
04E0 020000  R      LJMP   ?WHILE13
04E3         ?CASE62:
                                           ; SOURCE LINE # 266 
04E3 75001F  R      MOV    ns_after_pack,#01FH
                                           ; SOURCE LINE # 267 
04E6 E4             CLR    A
04E7 F500    R      MOV    rxCnt,A
04E9 F500    R      MOV    rxCnt+01H,A
04EB 75000A  R      MOV    rxState,#00AH
                                           ; SOURCE LINE # 268 
04EE 750019  R      MOV    state,#019H
                                           ; SOURCE LINE # 269 
04F1 020000  R      LJMP   ?WHILE13
04F4         ?CASE63:
                                           ; SOURCE LINE # 271 
04F4 750020  R      MOV    ns_after_pack,#020H
                                           ; SOURCE LINE # 272 
04F7 E4             CLR    A
04F8 F500    R      MOV    rxCnt,A
04FA F500    R      MOV    rxCnt+01H,A
04FC 75000A  R      MOV    rxState,#00AH
                                           ; SOURCE LINE # 273 
04FF 750019  R      MOV    state,#019H
                                           ; SOURCE LINE # 274 
0502 020000  R      LJMP   ?WHILE13
0505         ?CASE64:
                                           ; SOURCE LINE # 276 
0505 750021  R      MOV    ns_after_pack,#021H
                                           ; SOURCE LINE # 277 
0508 E4             CLR    A
0509 F500    R      MOV    rxCnt,A
050B F500    R      MOV    rxCnt+01H,A
050D 75000A  R      MOV    rxState,#00AH
                                           ; SOURCE LINE # 278 
0510 750019  R      MOV    state,#019H
                                           ; SOURCE LINE # 279 
0513 020000  R      LJMP   ?WHILE13
0516         ?CASE65:
                                           ; SOURCE LINE # 281 
0516 750022  R      MOV    ns_after_pack,#022H
                                           ; SOURCE LINE # 282 
0519 E4             CLR    A
051A F500    R      MOV    rxCnt,A
051C F500    R      MOV    rxCnt+01H,A
051E 75000A  R      MOV    rxState,#00AH
                                           ; SOURCE LINE # 283 
0521 750019  R      MOV    state,#019H
                                           ; SOURCE LINE # 284 
0524 020000  R      LJMP   ?WHILE13
0527         ?CASE66:
                                           ; SOURCE LINE # 286 
0527 750023  R      MOV    ns_after_pack,#023H
                                           ; SOURCE LINE # 287 
052A E4             CLR    A
052B F500    R      MOV    rxCnt,A
052D F500    R      MOV    rxCnt+01H,A
052F 75000A  R      MOV    rxState,#00AH
                                           ; SOURCE LINE # 288 
0532 750019  R      MOV    state,#019H
                                           ; SOURCE LINE # 289 
0535 020000  R      LJMP   ?WHILE13
0538         ?CASE67:
                                           ; SOURCE LINE # 291 
0538 900000  R      MOV    DPTR,#rxBuf+01D9H
053B E0             MOVX   A,@DPTR
053C 7900    R      MOV    R1,#FileName
053E F7             MOV    @R1,A
                                           ; SOURCE LINE # 292 
053F 900000  R      MOV    DPTR,#rxBuf+01D8H
0542 E0             MOVX   A,@DPTR
0543 7900    R      MOV    R1,#FileName+01H
0545 F7             MOV    @R1,A
                                           ; SOURCE LINE # 293 
0546 900000  R      MOV    DPTR,#rxBuf+01D7H
0549 E0             MOVX   A,@DPTR
054A 7900    R      MOV    R1,#FileName+02H
054C F7             MOV    @R1,A
                                           ; SOURCE LINE # 294 
054D 900000  R      MOV    DPTR,#rxBuf+01D6H
0550 E0             MOVX   A,@DPTR
0551 7900    R      MOV    R1,#FileName+03H
0553 F7             MOV    @R1,A
                                           ; SOURCE LINE # 295 
0554 900000  R      MOV    DPTR,#rxBuf+01D5H
0557 E0             MOVX   A,@DPTR
0558 7900    R      MOV    R1,#FileName+04H
055A F7             MOV    @R1,A
                                           ; SOURCE LINE # 296 
055B 900000  R      MOV    DPTR,#rxBuf+01D4H
055E E0             MOVX   A,@DPTR
055F 7900    R      MOV    R1,#FileName+05H
0561 F7             MOV    @R1,A
                                           ; SOURCE LINE # 297 
0562 900000  R      MOV    DPTR,#rxBuf+01D7H
0565 E0             MOVX   A,@DPTR
0566 F500    R      MOV    PreHour,A
                                           ; SOURCE LINE # 298 
0568 900000  R      MOV    DPTR,#rxBuf+01D6H
056B E0             MOVX   A,@DPTR
056C F500    R      MOV    PreDay,A
                                           ; SOURCE LINE # 299 
056E D292           SETB   SEL0
0570 C293           CLR    SEL1
                                           ; SOURCE LINE # 300 
0572 75002A  R      MOV    ns_after_pack,#02AH
                                           ; SOURCE LINE # 301 
0575 750024  R      MOV    state,#024H
                                           ; SOURCE LINE # 302 
0578 020000  R      LJMP   ?WHILE13
057B         ?CASE68:
                                           ; SOURCE LINE # 305 
057B 7F4D           MOV    R7,#04DH
057D 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 306 
0580 7F44           MOV    R7,#044H
0582 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 307 
0585 7F20           MOV    R7,#020H
0587 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 308 
058A 7F32           MOV    R7,#032H
058C 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 309 
058F 7F30           MOV    R7,#030H
0591 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 310 
0594 75F00A         MOV    B,#00AH
0597 7900    R      MOV    R1,#FileName+05H
0599 E7             MOV    A,@R1
059A 84             DIV    AB
059B 2430           ADD    A,#030H
059D FF             MOV    R7,A
059E 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 311 
05A1 75F00A         MOV    B,#00AH
05A4 E7             MOV    A,@R1
05A5 84             DIV    AB
05A6 E5F0           MOV    A,B
05A8 2430           ADD    A,#030H
05AA FF             MOV    R7,A
05AB 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 312 
05AE 75F00A         MOV    B,#00AH
05B1 7900    R      MOV    R1,#FileName+04H
05B3 E7             MOV    A,@R1
05B4 84             DIV    AB
05B5 2430           ADD    A,#030H
05B7 FF             MOV    R7,A
05B8 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 313 
05BB 75F00A         MOV    B,#00AH
05BE E7             MOV    A,@R1
05BF 84             DIV    AB
05C0 E5F0           MOV    A,B
05C2 2430           ADD    A,#030H
05C4 FF             MOV    R7,A
05C5 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 314 
05C8 75F00A         MOV    B,#00AH
05CB 7900    R      MOV    R1,#FileName+03H
05CD E7             MOV    A,@R1
05CE 84             DIV    AB
05CF 2430           ADD    A,#030H
05D1 FF             MOV    R7,A
05D2 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 315 
05D5 75F00A         MOV    B,#00AH
05D8 E7             MOV    A,@R1
05D9 84             DIV    AB
05DA E5F0           MOV    A,B
05DC 2430           ADD    A,#030H
05DE FF             MOV    R7,A
05DF 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 316 
05E2 7F0D           MOV    R7,#00DH
05E4 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 317 
05E7 750025  R      MOV    state,#025H
                                           ; SOURCE LINE # 319 
05EA 020000  R      LJMP   ?WHILE13
05ED         ?CASE69:
                                           ; SOURCE LINE # 322 
05ED 7F43           MOV    R7,#043H
05EF 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 323 
05F2 0F             INC    R7
05F3 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 324 
05F6 7F20           MOV    R7,#020H
05F8 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 325 
05FB 7F32           MOV    R7,#032H
05FD 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 326 
0600 7F30           MOV    R7,#030H
0602 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 327 
0605 75F00A         MOV    B,#00AH
0608 7900    R      MOV    R1,#FileName+05H
060A E7             MOV    A,@R1
060B 84             DIV    AB
060C 2430           ADD    A,#030H
060E FF             MOV    R7,A
060F 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 328 
0612 75F00A         MOV    B,#00AH
0615 E7             MOV    A,@R1
0616 84             DIV    AB
0617 E5F0           MOV    A,B
0619 2430           ADD    A,#030H
061B FF             MOV    R7,A
061C 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 329 
061F 75F00A         MOV    B,#00AH
0622 7900    R      MOV    R1,#FileName+04H
0624 E7             MOV    A,@R1
0625 84             DIV    AB
0626 2430           ADD    A,#030H
0628 FF             MOV    R7,A
0629 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 330 
062C 75F00A         MOV    B,#00AH
062F E7             MOV    A,@R1
0630 84             DIV    AB
0631 E5F0           MOV    A,B
0633 2430           ADD    A,#030H
0635 FF             MOV    R7,A
0636 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 331 
0639 75F00A         MOV    B,#00AH
063C 7900    R      MOV    R1,#FileName+03H
063E E7             MOV    A,@R1
063F 84             DIV    AB
0640 2430           ADD    A,#030H
0642 FF             MOV    R7,A
0643 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 332 
0646 75F00A         MOV    B,#00AH
0649 E7             MOV    A,@R1
064A 84             DIV    AB
064B E5F0           MOV    A,B
064D 2430           ADD    A,#030H
064F FF             MOV    R7,A
0650 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 333 
0653 7F0D           MOV    R7,#00DH
0655 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 334 
0658 750026  R      MOV    state,#026H
                                           ; SOURCE LINE # 336 
065B 020000  R      LJMP   ?WHILE13
065E         ?CASE70:
                                           ; SOURCE LINE # 339 
065E 7F4F           MOV    R7,#04FH
0660 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 340 
0663 7F46           MOV    R7,#046H
0665 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 341 
0668 7F20           MOV    R7,#020H
066A 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 342 
066D 7F30           MOV    R7,#030H
066F 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 343 
0672 7F41           MOV    R7,#041H
0674 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 344 
0677 7F3E           MOV    R7,#03EH
0679 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 345 
067C 75F00A         MOV    B,#00AH
067F 7900    R      MOV    R1,#FileName+02H
0681 E7             MOV    A,@R1
0682 84             DIV    AB
0683 2430           ADD    A,#030H
0685 FF             MOV    R7,A
0686 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 346 
0689 75F00A         MOV    B,#00AH
068C E7             MOV    A,@R1
068D 84             DIV    AB
068E E5F0           MOV    A,B
0690 2430           ADD    A,#030H
0692 FF             MOV    R7,A
0693 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 347 
0696 75F00A         MOV    B,#00AH
0699 7900    R      MOV    R1,#FileName+01H
069B E7             MOV    A,@R1
069C 84             DIV    AB
069D 2430           ADD    A,#030H
069F FF             MOV    R7,A
06A0 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 348 
06A3 75F00A         MOV    B,#00AH
06A6 E7             MOV    A,@R1
06A7 84             DIV    AB
06A8 E5F0           MOV    A,B
06AA 2430           ADD    A,#030H
06AC FF             MOV    R7,A
06AD 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 349 
06B0 75F00A         MOV    B,#00AH
06B3 7900    R      MOV    R1,#FileName
06B5 E7             MOV    A,@R1
06B6 84             DIV    AB
06B7 2430           ADD    A,#030H
06B9 FF             MOV    R7,A
06BA 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 350 
06BD 75F00A         MOV    B,#00AH
06C0 E7             MOV    A,@R1
06C1 84             DIV    AB
06C2 E5F0           MOV    A,B
06C4 2430           ADD    A,#030H
06C6 FF             MOV    R7,A
06C7 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 351 
06CA 7F2E           MOV    R7,#02EH
06CC 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 352 
06CF 7F65           MOV    R7,#065H
06D1 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 353 
06D4 7F76           MOV    R7,#076H
06D6 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 354 
06D9 7F74           MOV    R7,#074H
06DB 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 355 
06DE 7F0D           MOV    R7,#00DH
06E0 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 356 
06E3 750027  R      MOV    state,#027H
                                           ; SOURCE LINE # 358 
06E6 020000  R      LJMP   ?WHILE13
06E9         ?CASE71:
                                           ; SOURCE LINE # 361 
06E9 7B05           MOV    R3,#005H
06EB 7A00    R      MOV    R2,#000H
06ED 7900    R      MOV    R1,#000H
06EF 120000  R      LCALL  _SD_WriteCmd
                                           ; SOURCE LINE # 362 
06F2 750008  R      MOV    rxState,#008H
                                           ; SOURCE LINE # 363 
06F5 750019  R      MOV    state,#019H
                                           ; SOURCE LINE # 365 
06F8 020000  R      LJMP   ?WHILE13
06FB         ?CASE72:
                                           ; SOURCE LINE # 367 
06FB E4             CLR    A
06FC F500    R      MOV    h,A
06FE F500    R      MOV    h+01H,A
0700         ?FOR5:
0700 E500    R      MOV    A,h
0702 B40105         CJNE   A,#001H,?LAB66
0705 E500    R      MOV    A,h+01H
0707 B4D400         CJNE   A,#0D4H,?LAB66
070A         ?LAB66:
070A 501B           JNC    ?NXT75
                                           ; SOURCE LINE # 368 
070C E500    R      MOV    A,h+01H
070E 2400    R      ADD    A,#LOW (rxBuf)
0710 F582           MOV    DPL,A
0712 E500    R      MOV    A,h
0714 3400    R      ADDC   A,#HIGH (rxBuf)
0716 F583           MOV    DPH,A
0718 E0             MOVX   A,@DPTR
0719 FF             MOV    R7,A
071A 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 224 
071D 0500    R      INC    h+01H
071F E500    R      MOV    A,h+01H
0721 70DD           JNZ    ?FOR5
0723 0500    R      INC    h
0725 80D9           SJMP   ?FOR5
0727         ?NXT75:
                                           ; SOURCE LINE # 369 
0727 750009  R      MOV    rxState,#009H
                                           ; SOURCE LINE # 370 
072A 750019  R      MOV    state,#019H
                                           ; SOURCE LINE # 372 
072D 020000  R      LJMP   ?WHILE13
0730         ?CASE73:
                                           ; SOURCE LINE # 374 
0730 E500    R      MOV    A,free_size+03H
0732 1500    R      DEC    free_size+03H
0734 700E           JNZ    ?LAB69
0736 E500    R      MOV    A,free_size+02H
0738 1500    R      DEC    free_size+02H
073A 7008           JNZ    ?LAB69
073C E500    R      MOV    A,free_size+01H
073E 1500    R      DEC    free_size+01H
0740 7002           JNZ    ?LAB69
0742 1500    R      DEC    free_size
0744         ?LAB69:
                                           ; SOURCE LINE # 375 
0744 7B05           MOV    R3,#005H
0746 7A00    R      MOV    R2,#000H
0748 7900    R      MOV    R1,#000H
074A 120000  R      LCALL  _SD_WriteCmd
                                           ; SOURCE LINE # 376 
074D C292           CLR    SEL0
074F D293           SETB   SEL1
                                           ; SOURCE LINE # 377 
0751 E4             CLR    A
0752 F500    R      MOV    rxCnt,A
0754 F500    R      MOV    rxCnt+01H,A
0756 75000A  R      MOV    rxState,#00AH
                                           ; SOURCE LINE # 378 
0759 750019  R      MOV    state,#019H
                                           ; SOURCE LINE # 380 
075C 020000  R      LJMP   ?WHILE13
075F         ?CASE74:
                                           ; SOURCE LINE # 383 
075F E500    R      MOV    A,free_size
0761 4500    R      ORL    A,free_size+01H
0763 4500    R      ORL    A,free_size+02H
0765 4500    R      ORL    A,free_size+03H
0767 6036           JZ     ?ELSE45
                                           ; SOURCE LINE # 385 
0769 C000    R      PUSH   free_size
076B C000    R      PUSH   free_size+01H
076D C000    R      PUSH   free_size+02H
076F C000    R      PUSH   free_size+03H
0771 E4             CLR    A
0772 FE             MOV    R6,A
0773 FC             MOV    R4,A
0774 FD             MOV    R5,A
0775 7464           MOV    A,#064H
0777 FF             MOV    R7,A
0778 120000  R      LCALL  ?C_LMUL
077B C004           PUSH   AR4
077D C005           PUSH   AR5
077F C006           PUSH   AR6
0781 C007           PUSH   AR7
0783 AC00    R      MOV    R4,tot_size
0785 AD00    R      MOV    R5,tot_size+01H
0787 AE00    R      MOV    R6,tot_size+02H
0789 AF00    R      MOV    R7,tot_size+03H
078B 120000  R      LCALL  ?C_ULDIV_SP
078E 8F00    R      MOV    Percent,R7
                                           ; SOURCE LINE # 386 
0790 75F019         MOV    B,#019H
0793 E500    R      MOV    A,Percent
0795 84             DIV    AB
0796 F500    R      MOV    Percent,A
                                           ; SOURCE LINE # 387 
0798 2432           ADD    A,#032H
079A F500    R      MOV    state,A
079C 020000  R      LJMP   ?NXT67
079F         ?ELSE45:
                                           ; SOURCE LINE # 392 
079F D2A0           SETB   led1
                                           ; SOURCE LINE # 393 
07A1 D2A1           SETB   led2
                                           ; SOURCE LINE # 394 
07A3 D2A2           SETB   led3
                                           ; SOURCE LINE # 398 
07A5 750019  R      MOV    state,#019H
                                           ; SOURCE LINE # 400 
07A8 020000  R      LJMP   ?WHILE13
07AB         ?CASE79:
                                           ; SOURCE LINE # 402 
07AB B2A0           CPL    led1
                                           ; SOURCE LINE # 403 
07AD 75002F  R      MOV    state,#02FH
                                           ; SOURCE LINE # 404 
07B0 020000  R      LJMP   ?WHILE13
07B3         ?CASE78:
                                           ; SOURCE LINE # 406 
07B3 D2A0           SETB   led1
                                           ; SOURCE LINE # 407 
07B5 B2A1           CPL    led2
                                           ; SOURCE LINE # 408 
07B7 75002F  R      MOV    state,#02FH
                                           ; SOURCE LINE # 409 
07BA 020000  R      LJMP   ?WHILE13
07BD         ?CASE77:
                                           ; SOURCE LINE # 411 
07BD D2A0           SETB   led1
                                           ; SOURCE LINE # 412 
07BF D2A1           SETB   led2
                                           ; SOURCE LINE # 413 
07C1 B2A2           CPL    led3
                                           ; SOURCE LINE # 414 
07C3 75002F  R      MOV    state,#02FH
                                           ; SOURCE LINE # 415 
07C6 020000  R      LJMP   ?WHILE13
07C9         ?CASE76:
                                           ; SOURCE LINE # 417 
07C9 B2A0           CPL    led1
                                           ; SOURCE LINE # 418 
07CB B2A1           CPL    led2
                                           ; SOURCE LINE # 419 
07CD B2A2           CPL    led3
                                           ; SOURCE LINE # 424 
07CF 75002F  R      MOV    state,#02FH
                                           ; SOURCE LINE # 425 
07D2 020000  R      LJMP   ?WHILE13
07D5         ?CASE75:
                                           ; SOURCE LINE # 427 
07D5 D292           SETB   SEL0
07D7 C293           CLR    SEL1
                                           ; SOURCE LINE # 428 
07D9 900000  R      MOV    DPTR,#rxBuf+01D6H
07DC E0             MOVX   A,@DPTR
07DD 6500    R      XRL    A,PreDay
07DF 6041           JZ     ?ELSE46
                                           ; SOURCE LINE # 430 
07E1 900000  R      MOV    DPTR,#rxBuf+01D9H
07E4 E0             MOVX   A,@DPTR
07E5 7900    R      MOV    R1,#FileName
07E7 F7             MOV    @R1,A
                                           ; SOURCE LINE # 431 
07E8 900000  R      MOV    DPTR,#rxBuf+01D8H
07EB E0             MOVX   A,@DPTR
07EC 7900    R      MOV    R1,#FileName+01H
07EE F7             MOV    @R1,A
                                           ; SOURCE LINE # 432 
07EF 900000  R      MOV    DPTR,#rxBuf+01D7H
07F2 E0             MOVX   A,@DPTR
07F3 7900    R      MOV    R1,#FileName+02H
07F5 F7             MOV    @R1,A
                                           ; SOURCE LINE # 433 
07F6 900000  R      MOV    DPTR,#rxBuf+01D6H
07F9 E0             MOVX   A,@DPTR
07FA 7900    R      MOV    R1,#FileName+03H
07FC F7             MOV    @R1,A
                                           ; SOURCE LINE # 434 
07FD 900000  R      MOV    DPTR,#rxBuf+01D5H
0800 E0             MOVX   A,@DPTR
0801 7900    R      MOV    R1,#FileName+04H
0803 F7             MOV    @R1,A
                                           ; SOURCE LINE # 435 
0804 900000  R      MOV    DPTR,#rxBuf+01D4H
0807 E0             MOVX   A,@DPTR
0808 7900    R      MOV    R1,#FileName+05H
080A F7             MOV    @R1,A
                                           ; SOURCE LINE # 437 
080B 7B05           MOV    R3,#005H
080D 7A00    R      MOV    R2,#000H
080F 7900    R      MOV    R1,#000H
0811 120000  R      LCALL  _SD_WriteCmd
                                           ; SOURCE LINE # 439 
0814 7B05           MOV    R3,#005H
0816 7A00    R      MOV    R2,#000H
0818 7900    R      MOV    R1,#000H
081A 120000  R      LCALL  _SD_WriteCmd
                                           ; SOURCE LINE # 440 
081D 750024  R      MOV    state,#024H
0820 8056           SJMP   ?NXT78
0822         ?ELSE46:
                                           ; SOURCE LINE # 443 
0822 900000  R      MOV    DPTR,#rxBuf+01D6H
0825 E0             MOVX   A,@DPTR
0826 B50040  R      CJNE   A,PreDay,?ELSE47
0829 900000  R      MOV    DPTR,#rxBuf+01D7H
082C E0             MOVX   A,@DPTR
082D 6500    R      XRL    A,PreHour
082F 6038           JZ     ?ELSE47
                                           ; SOURCE LINE # 445 
0831 900000  R      MOV    DPTR,#rxBuf+01D9H
0834 E0             MOVX   A,@DPTR
0835 7900    R      MOV    R1,#FileName
0837 F7             MOV    @R1,A
                                           ; SOURCE LINE # 446 
0838 900000  R      MOV    DPTR,#rxBuf+01D8H
083B E0             MOVX   A,@DPTR
083C 7900    R      MOV    R1,#FileName+01H
083E F7             MOV    @R1,A
                                           ; SOURCE LINE # 447 
083F 900000  R      MOV    DPTR,#rxBuf+01D7H
0842 E0             MOVX   A,@DPTR
0843 7900    R      MOV    R1,#FileName+02H
0845 F7             MOV    @R1,A
                                           ; SOURCE LINE # 448 
0846 900000  R      MOV    DPTR,#rxBuf+01D6H
0849 E0             MOVX   A,@DPTR
084A 7900    R      MOV    R1,#FileName+03H
084C F7             MOV    @R1,A
                                           ; SOURCE LINE # 449 
084D 900000  R      MOV    DPTR,#rxBuf+01D5H
0850 E0             MOVX   A,@DPTR
0851 7900    R      MOV    R1,#FileName+04H
0853 F7             MOV    @R1,A
                                           ; SOURCE LINE # 450 
0854 900000  R      MOV    DPTR,#rxBuf+01D4H
0857 E0             MOVX   A,@DPTR
0858 7900    R      MOV    R1,#FileName+05H
085A F7             MOV    @R1,A
                                           ; SOURCE LINE # 452 
085B 7B05           MOV    R3,#005H
085D 7A00    R      MOV    R2,#000H
085F 7900    R      MOV    R1,#000H
0861 120000  R      LCALL  _SD_WriteCmd
                                           ; SOURCE LINE # 453 
0864 750026  R      MOV    state,#026H
0867 800F           SJMP   ?NXT78
0869         ?ELSE47:
                                           ; SOURCE LINE # 459 
0869 7B05           MOV    R3,#005H
086B 7A00    R      MOV    R2,#000H
086D 7900    R      MOV    R1,#000H
086F 120000  R      LCALL  _SD_WriteCmd
                                           ; SOURCE LINE # 460 
0872 750008  R      MOV    rxState,#008H
                                           ; SOURCE LINE # 461 
0875 750019  R      MOV    state,#019H
0878         ?NXT78:
                                           ; SOURCE LINE # 464 
0878 900000  R      MOV    DPTR,#rxBuf+01D7H
087B E0             MOVX   A,@DPTR
087C F500    R      MOV    PreHour,A
                                           ; SOURCE LINE # 465 
087E 900000  R      MOV    DPTR,#rxBuf+01D6H
0881 E0             MOVX   A,@DPTR
0882 F500    R      MOV    PreDay,A
0884         ?NXT67:
                                           ; SOURCE LINE # 466 
0884 020000  R      LJMP   ?WHILE13

            ; FUNCTION main (END)

            ; FUNCTION Serial (BEGIN)
                                           ; SOURCE LINE # 476 
0000 C0D0           PUSH   PSW
                                           ; SOURCE LINE # 472 
0002 309807         JNB    RI,?NXT83
                                           ; SOURCE LINE # 474 
0005 C298           CLR    RI
                                           ; SOURCE LINE # 475 
0007 859900  R      MOV    rxChr,SBUF
                                           ; SOURCE LINE # 476 
000A D200    R      SETB   rxFlag
000C         ?NXT83:
000C D0D0           POP    PSW
000E 32             RETI   

            ; FUNCTION Serial (END)

C51 COMPILER V6.11.4C,  MAIN                      02/06/112  11:11:19  PAGE  3

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====

rxBuf. . . . . . . . . . . . . . . . .  PUBLIC  XDATA   ARRAY   0000H   477  
FileName . . . . . . . . . . . . . . .  PUBLIC  IDATA   ARRAY   0000H   6    
rxCnt. . . . . . . . . . . . . . . . .  PUBLIC  DATA    U_INT  0000H   2    
state. . . . . . . . . . . . . . . . .  PUBLIC  DATA    BASE    0002H   1    
tmp. . . . . . . . . . . . . . . . . .  PUBLIC  DATA    BASE    0003H   1    
nibble . . . . . . . . . . . . . . . .  PUBLIC  DATA    BASE    0004H   1    
PreHour. . . . . . . . . . . . . . . .  PUBLIC  DATA    BASE    0005H   1    
PreDay . . . . . . . . . . . . . . . .  PUBLIC  DATA    BASE    0006H   1    
rxState. . . . . . . . . . . . . . . .  PUBLIC  DATA    BASE    0007H   1    
ns_after_pack. . . . . . . . . . . . .  PUBLIC  DATA    BASE    0008H   1    
h. . . . . . . . . . . . . . . . . . .  PUBLIC  DATA    U_INT  0009H   2    
tot_size . . . . . . . . . . . . . . .  PUBLIC  DATA    BASE    000BH   4    
Percent. . . . . . . . . . . . . . . .  PUBLIC  DATA    BASE    000FH   1    
free_size. . . . . . . . . . . . . . .  PUBLIC  DATA    LONG    0010H   4    
isInit . . . . . . . . . . . . . . . .  PUBLIC  DATA    BIT     0000H   1    
RTS_Flag . . . . . . . . . . . . . . .  PUBLIC  DATA    BIT     0001H   1    
rxFlag . . . . . . . . . . . . . . . .  PUBLIC  DATA    BIT     0002H   1    
rxChr. . . . . . . . . . . . . . . . .  PUBLIC  DATA    BASE    0014H   1    
SendChar . . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
  c?040. . . . . . . . . . . . . . . .  PARAM   DATA    BASE    0000H   1    
  c?040. . . . . . . . . . . . . . . .  PARAM   DATA    BASE    0000H   1    
SD_WriteCmd. . . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
  cmd?041. . . . . . . . . . . . . . .  PARAM   DATA    PTR     0000H   3    
  cmd?041. . . . . . . . . . . . . . .  PARAM   DATA    PTR     0000H   3    
main . . . . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
Serial . . . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
C51 COMPILER V6.11.4C,  MAIN                      02/06/112  11:11:19  PAGE  4



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2264    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    477    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     21    ----
   IDATA SIZE       =      6    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.

C51 COMPILATION COMPLETE.  0 WARNING,  0 ERROR
